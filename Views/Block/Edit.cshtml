@model ProjectTracker.Models.Block_Track

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

@section head {
    <link href="~/Content/datepicker3.css" rel="stylesheet" />
}

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.PageNo)
        <h4>Block: @Html.DisplayFor(model => model.PageNo)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.OBJECTID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    @Html.EditorFor(model => model.OBJECTID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OBJECTID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@    

        <div class="form-group">
            @Html.LabelFor(model => model.StreetCalcs, htmlAttributes: new { @class = "control-label col-md-2" })
            @*@Html.DisplayNameFor(model => model.StreetCalcs)*@
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.StreetCalcs)
                        @Html.ValidationMessageFor(model => model.StreetCalcs, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConcreteCalcs, "Concrete Calcs", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.ConcreteCalcs)
                        @Html.ValidationMessageFor(model => model.ConcreteCalcs, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Geometry, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Geometry)
                        @Html.ValidationMessageFor(model => model.Geometry, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MXD_Export, "MXD Export", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.MXD_Export)
                        @Html.ValidationMessageFor(model => model.MXD_Export, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photoline_MXD_Export, "Photoline MXD Export", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Photoline_MXD_Export)
                        @Html.ValidationMessageFor(model => model.Photoline_MXD_Export, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CIC_Summary_Sheet_Export, "CIC Summary", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.CIC_Summary_Sheet_Export)
                        @Html.ValidationMessageFor(model => model.CIC_Summary_Sheet_Export, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Streets_Sketchline_Edits, "Streets Sketchline Edits", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Streets_Sketchline_Edits)
                        @Html.ValidationMessageFor(model => model.Streets_Sketchline_Edits, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Concrete_Edits, "Concrete Edits", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Concrete_Edits)
                        @Html.ValidationMessageFor(model => model.Concrete_Edits, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MXD_PDF, "MXD PDF", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.MXD_PDF)
                        @Html.ValidationMessageFor(model => model.MXD_PDF, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photoline_PDF, "Photoline PDF", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Photoline_PDF)
                        @Html.ValidationMessageFor(model => model.Photoline_PDF, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photolog_PDF, "Photolog PDF", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Photolog_PDF)
                        @Html.ValidationMessageFor(model => model.Photolog_PDF, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FTP_Upload, "FTP Upload", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10 col-md-offset-0">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.FTP_Upload)
                        @Html.ValidationMessageFor(model => model.FTP_Upload, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Submitted, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">*@
                <div class="col-md-10 col-md-offset-0">
                    @*@Html.EditorFor(model => model.Submitted, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextBoxFor(model => model.Submitted, "{0:MM/dd/yyyy}", new { @class = "form-control", data_provide = "datepicker", data_date_format = "mm/dd/yyyy", data_date_today_highlight = "true", data_autoclose = "true" })
                    @Html.ValidationMessageFor(model => model.Submitted, "", new { @class = "text-danger" })
                </div>
            @*</div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">*@
                <div class="col-md-10 col-md-offset-0">
                    @*@Html.EditorFor(model => model.Completed, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextBoxFor(model => model.Completed, "{0:MM/dd/yyyy}", new { @class = "form-control", data_provide = "datepicker", data_date_format = "mm/dd/yyyy", data_date_today_highlight = "true", data_autoclose = "true" })
                    @Html.ValidationMessageFor(model => model.Completed, "", new { @class = "text-danger" })
                </div>
            @*</div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.testYN, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.testYN, "Yes") Yes
                @Html.RadioButtonFor(model => model.testYN, "No") No
            </div>
        </div>*@

        @{
            foreach (var YN in @ViewBag.YNList as List<ProjectTracker.Models.testDomain>)
            {
                <div>
                    @Html.RadioButtonFor(model => model.testYN, YN.YN_Val, new { id = "yn" + YN.ID})
                    @Html.Label("yn" + YN.ID, YN.YN_Val)
                </div>     
            }
        }

        @*<div class="form-group">
            <label class="col-md-4 control-label" for="checkboxes">Test YN:</label>
                <div class="col-md-4">
                    <label class="checkbox-inline" for="checkboxes-0">
                        @Html.EditorFor(model => model.testYN)
                        <input type="checkbox" name="checkboxes" id="checkboxes-0" value="1" />Yes
                    </label>
                    
                    <label class="checkbox-inline" for="checkboxes-1">
                        <input type="checkbox" name="checkboxes" id="checkboxes-1" value="2" />No
                    </label>
                </div>                 
        </div>*@
        



        @*@Html.HiddenFor(model => model.PageNo)*@

        <div class="form-group">            
                <div class="col-md-offset-2 col-md-10">                    
                    @*<div class="col-md-10">*@
                        <input type="submit" value="Save" class="btn btn-default" />
                    @*</div>*@
                </div>            
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
}
